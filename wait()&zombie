1/3/2024
wait()syswtem call
-A call to wait() blocks the calling process until one of its child processes exits or a signal is received.
-After child process terminates, parent continues its execution after wait system call instruction.
-If any process has more than one child processes, then after calling wait(), parent process has to be in wait state if no child terminates. 
-If only one child process is terminated, then return a wait() returns process ID of the terminated child process. 
-If more than one child processes are terminated than wait() reap any arbitrarily child and return a process ID of that child process. 
-When wait() returns they also define exit status (which tells our, a process why terminated) via pointer, If status are not NULL.
-If any process has no child process then wait() returns immediately “-1”.
zombie process
-In conclusion, a zombie process in Linux is a terminated child process that remains in the system's process table while waiting for its parent process to collect its exit status.
A zombie process is a type of process that has completed its execution but still has an entry in the process table
